package cn.ym.pojo;

import java.util.ArrayList;
import java.util.List;

public class AssortmentExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table assortment
     *
     * @mbggenerated Sat Dec 22 15:26:15 CST 2018
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table assortment
     *
     * @mbggenerated Sat Dec 22 15:26:15 CST 2018
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table assortment
     *
     * @mbggenerated Sat Dec 22 15:26:15 CST 2018
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table assortment
     *
     * @mbggenerated Sat Dec 22 15:26:15 CST 2018
     */
    public AssortmentExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table assortment
     *
     * @mbggenerated Sat Dec 22 15:26:15 CST 2018
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table assortment
     *
     * @mbggenerated Sat Dec 22 15:26:15 CST 2018
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table assortment
     *
     * @mbggenerated Sat Dec 22 15:26:15 CST 2018
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table assortment
     *
     * @mbggenerated Sat Dec 22 15:26:15 CST 2018
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table assortment
     *
     * @mbggenerated Sat Dec 22 15:26:15 CST 2018
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table assortment
     *
     * @mbggenerated Sat Dec 22 15:26:15 CST 2018
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table assortment
     *
     * @mbggenerated Sat Dec 22 15:26:15 CST 2018
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table assortment
     *
     * @mbggenerated Sat Dec 22 15:26:15 CST 2018
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table assortment
     *
     * @mbggenerated Sat Dec 22 15:26:15 CST 2018
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table assortment
     *
     * @mbggenerated Sat Dec 22 15:26:15 CST 2018
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table assortment
     *
     * @mbggenerated Sat Dec 22 15:26:15 CST 2018
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andIdIsNull() {
            addCriterion("id is null");
            return (Criteria) this;
        }

        public Criteria andIdIsNotNull() {
            addCriterion("id is not null");
            return (Criteria) this;
        }

        public Criteria andIdEqualTo(Integer value) {
            addCriterion("id =", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotEqualTo(Integer value) {
            addCriterion("id <>", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThan(Integer value) {
            addCriterion("id >", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("id >=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThan(Integer value) {
            addCriterion("id <", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThanOrEqualTo(Integer value) {
            addCriterion("id <=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdIn(List<Integer> values) {
            addCriterion("id in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotIn(List<Integer> values) {
            addCriterion("id not in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdBetween(Integer value1, Integer value2) {
            addCriterion("id between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotBetween(Integer value1, Integer value2) {
            addCriterion("id not between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andNodecodeIsNull() {
            addCriterion("NodeCode is null");
            return (Criteria) this;
        }

        public Criteria andNodecodeIsNotNull() {
            addCriterion("NodeCode is not null");
            return (Criteria) this;
        }

        public Criteria andNodecodeEqualTo(String value) {
            addCriterion("NodeCode =", value, "nodecode");
            return (Criteria) this;
        }

        public Criteria andNodecodeNotEqualTo(String value) {
            addCriterion("NodeCode <>", value, "nodecode");
            return (Criteria) this;
        }

        public Criteria andNodecodeGreaterThan(String value) {
            addCriterion("NodeCode >", value, "nodecode");
            return (Criteria) this;
        }

        public Criteria andNodecodeGreaterThanOrEqualTo(String value) {
            addCriterion("NodeCode >=", value, "nodecode");
            return (Criteria) this;
        }

        public Criteria andNodecodeLessThan(String value) {
            addCriterion("NodeCode <", value, "nodecode");
            return (Criteria) this;
        }

        public Criteria andNodecodeLessThanOrEqualTo(String value) {
            addCriterion("NodeCode <=", value, "nodecode");
            return (Criteria) this;
        }

        public Criteria andNodecodeLike(String value) {
            addCriterion("NodeCode like", value, "nodecode");
            return (Criteria) this;
        }

        public Criteria andNodecodeNotLike(String value) {
            addCriterion("NodeCode not like", value, "nodecode");
            return (Criteria) this;
        }

        public Criteria andNodecodeIn(List<String> values) {
            addCriterion("NodeCode in", values, "nodecode");
            return (Criteria) this;
        }

        public Criteria andNodecodeNotIn(List<String> values) {
            addCriterion("NodeCode not in", values, "nodecode");
            return (Criteria) this;
        }

        public Criteria andNodecodeBetween(String value1, String value2) {
            addCriterion("NodeCode between", value1, value2, "nodecode");
            return (Criteria) this;
        }

        public Criteria andNodecodeNotBetween(String value1, String value2) {
            addCriterion("NodeCode not between", value1, value2, "nodecode");
            return (Criteria) this;
        }

        public Criteria andIsvisibleIsNull() {
            addCriterion("IsVisible is null");
            return (Criteria) this;
        }

        public Criteria andIsvisibleIsNotNull() {
            addCriterion("IsVisible is not null");
            return (Criteria) this;
        }

        public Criteria andIsvisibleEqualTo(String value) {
            addCriterion("IsVisible =", value, "isvisible");
            return (Criteria) this;
        }

        public Criteria andIsvisibleNotEqualTo(String value) {
            addCriterion("IsVisible <>", value, "isvisible");
            return (Criteria) this;
        }

        public Criteria andIsvisibleGreaterThan(String value) {
            addCriterion("IsVisible >", value, "isvisible");
            return (Criteria) this;
        }

        public Criteria andIsvisibleGreaterThanOrEqualTo(String value) {
            addCriterion("IsVisible >=", value, "isvisible");
            return (Criteria) this;
        }

        public Criteria andIsvisibleLessThan(String value) {
            addCriterion("IsVisible <", value, "isvisible");
            return (Criteria) this;
        }

        public Criteria andIsvisibleLessThanOrEqualTo(String value) {
            addCriterion("IsVisible <=", value, "isvisible");
            return (Criteria) this;
        }

        public Criteria andIsvisibleLike(String value) {
            addCriterion("IsVisible like", value, "isvisible");
            return (Criteria) this;
        }

        public Criteria andIsvisibleNotLike(String value) {
            addCriterion("IsVisible not like", value, "isvisible");
            return (Criteria) this;
        }

        public Criteria andIsvisibleIn(List<String> values) {
            addCriterion("IsVisible in", values, "isvisible");
            return (Criteria) this;
        }

        public Criteria andIsvisibleNotIn(List<String> values) {
            addCriterion("IsVisible not in", values, "isvisible");
            return (Criteria) this;
        }

        public Criteria andIsvisibleBetween(String value1, String value2) {
            addCriterion("IsVisible between", value1, value2, "isvisible");
            return (Criteria) this;
        }

        public Criteria andIsvisibleNotBetween(String value1, String value2) {
            addCriterion("IsVisible not between", value1, value2, "isvisible");
            return (Criteria) this;
        }

        public Criteria andNodenameIsNull() {
            addCriterion("NodeName is null");
            return (Criteria) this;
        }

        public Criteria andNodenameIsNotNull() {
            addCriterion("NodeName is not null");
            return (Criteria) this;
        }

        public Criteria andNodenameEqualTo(String value) {
            addCriterion("NodeName =", value, "nodename");
            return (Criteria) this;
        }

        public Criteria andNodenameNotEqualTo(String value) {
            addCriterion("NodeName <>", value, "nodename");
            return (Criteria) this;
        }

        public Criteria andNodenameGreaterThan(String value) {
            addCriterion("NodeName >", value, "nodename");
            return (Criteria) this;
        }

        public Criteria andNodenameGreaterThanOrEqualTo(String value) {
            addCriterion("NodeName >=", value, "nodename");
            return (Criteria) this;
        }

        public Criteria andNodenameLessThan(String value) {
            addCriterion("NodeName <", value, "nodename");
            return (Criteria) this;
        }

        public Criteria andNodenameLessThanOrEqualTo(String value) {
            addCriterion("NodeName <=", value, "nodename");
            return (Criteria) this;
        }

        public Criteria andNodenameLike(String value) {
            addCriterion("NodeName like", value, "nodename");
            return (Criteria) this;
        }

        public Criteria andNodenameNotLike(String value) {
            addCriterion("NodeName not like", value, "nodename");
            return (Criteria) this;
        }

        public Criteria andNodenameIn(List<String> values) {
            addCriterion("NodeName in", values, "nodename");
            return (Criteria) this;
        }

        public Criteria andNodenameNotIn(List<String> values) {
            addCriterion("NodeName not in", values, "nodename");
            return (Criteria) this;
        }

        public Criteria andNodenameBetween(String value1, String value2) {
            addCriterion("NodeName between", value1, value2, "nodename");
            return (Criteria) this;
        }

        public Criteria andNodenameNotBetween(String value1, String value2) {
            addCriterion("NodeName not between", value1, value2, "nodename");
            return (Criteria) this;
        }

        public Criteria andParentidIsNull() {
            addCriterion("parentId is null");
            return (Criteria) this;
        }

        public Criteria andParentidIsNotNull() {
            addCriterion("parentId is not null");
            return (Criteria) this;
        }

        public Criteria andParentidEqualTo(Integer value) {
            addCriterion("parentId =", value, "parentid");
            return (Criteria) this;
        }

        public Criteria andParentidNotEqualTo(Integer value) {
            addCriterion("parentId <>", value, "parentid");
            return (Criteria) this;
        }

        public Criteria andParentidGreaterThan(Integer value) {
            addCriterion("parentId >", value, "parentid");
            return (Criteria) this;
        }

        public Criteria andParentidGreaterThanOrEqualTo(Integer value) {
            addCriterion("parentId >=", value, "parentid");
            return (Criteria) this;
        }

        public Criteria andParentidLessThan(Integer value) {
            addCriterion("parentId <", value, "parentid");
            return (Criteria) this;
        }

        public Criteria andParentidLessThanOrEqualTo(Integer value) {
            addCriterion("parentId <=", value, "parentid");
            return (Criteria) this;
        }

        public Criteria andParentidIn(List<Integer> values) {
            addCriterion("parentId in", values, "parentid");
            return (Criteria) this;
        }

        public Criteria andParentidNotIn(List<Integer> values) {
            addCriterion("parentId not in", values, "parentid");
            return (Criteria) this;
        }

        public Criteria andParentidBetween(Integer value1, Integer value2) {
            addCriterion("parentId between", value1, value2, "parentid");
            return (Criteria) this;
        }

        public Criteria andParentidNotBetween(Integer value1, Integer value2) {
            addCriterion("parentId not between", value1, value2, "parentid");
            return (Criteria) this;
        }

        public Criteria andNodeorderIsNull() {
            addCriterion("NodeOrder is null");
            return (Criteria) this;
        }

        public Criteria andNodeorderIsNotNull() {
            addCriterion("NodeOrder is not null");
            return (Criteria) this;
        }

        public Criteria andNodeorderEqualTo(Integer value) {
            addCriterion("NodeOrder =", value, "nodeorder");
            return (Criteria) this;
        }

        public Criteria andNodeorderNotEqualTo(Integer value) {
            addCriterion("NodeOrder <>", value, "nodeorder");
            return (Criteria) this;
        }

        public Criteria andNodeorderGreaterThan(Integer value) {
            addCriterion("NodeOrder >", value, "nodeorder");
            return (Criteria) this;
        }

        public Criteria andNodeorderGreaterThanOrEqualTo(Integer value) {
            addCriterion("NodeOrder >=", value, "nodeorder");
            return (Criteria) this;
        }

        public Criteria andNodeorderLessThan(Integer value) {
            addCriterion("NodeOrder <", value, "nodeorder");
            return (Criteria) this;
        }

        public Criteria andNodeorderLessThanOrEqualTo(Integer value) {
            addCriterion("NodeOrder <=", value, "nodeorder");
            return (Criteria) this;
        }

        public Criteria andNodeorderIn(List<Integer> values) {
            addCriterion("NodeOrder in", values, "nodeorder");
            return (Criteria) this;
        }

        public Criteria andNodeorderNotIn(List<Integer> values) {
            addCriterion("NodeOrder not in", values, "nodeorder");
            return (Criteria) this;
        }

        public Criteria andNodeorderBetween(Integer value1, Integer value2) {
            addCriterion("NodeOrder between", value1, value2, "nodeorder");
            return (Criteria) this;
        }

        public Criteria andNodeorderNotBetween(Integer value1, Integer value2) {
            addCriterion("NodeOrder not between", value1, value2, "nodeorder");
            return (Criteria) this;
        }

        public Criteria andNodelevelIsNull() {
            addCriterion("NodeLevel is null");
            return (Criteria) this;
        }

        public Criteria andNodelevelIsNotNull() {
            addCriterion("NodeLevel is not null");
            return (Criteria) this;
        }

        public Criteria andNodelevelEqualTo(Integer value) {
            addCriterion("NodeLevel =", value, "nodelevel");
            return (Criteria) this;
        }

        public Criteria andNodelevelNotEqualTo(Integer value) {
            addCriterion("NodeLevel <>", value, "nodelevel");
            return (Criteria) this;
        }

        public Criteria andNodelevelGreaterThan(Integer value) {
            addCriterion("NodeLevel >", value, "nodelevel");
            return (Criteria) this;
        }

        public Criteria andNodelevelGreaterThanOrEqualTo(Integer value) {
            addCriterion("NodeLevel >=", value, "nodelevel");
            return (Criteria) this;
        }

        public Criteria andNodelevelLessThan(Integer value) {
            addCriterion("NodeLevel <", value, "nodelevel");
            return (Criteria) this;
        }

        public Criteria andNodelevelLessThanOrEqualTo(Integer value) {
            addCriterion("NodeLevel <=", value, "nodelevel");
            return (Criteria) this;
        }

        public Criteria andNodelevelIn(List<Integer> values) {
            addCriterion("NodeLevel in", values, "nodelevel");
            return (Criteria) this;
        }

        public Criteria andNodelevelNotIn(List<Integer> values) {
            addCriterion("NodeLevel not in", values, "nodelevel");
            return (Criteria) this;
        }

        public Criteria andNodelevelBetween(Integer value1, Integer value2) {
            addCriterion("NodeLevel between", value1, value2, "nodelevel");
            return (Criteria) this;
        }

        public Criteria andNodelevelNotBetween(Integer value1, Integer value2) {
            addCriterion("NodeLevel not between", value1, value2, "nodelevel");
            return (Criteria) this;
        }

        public Criteria andCountIsNull() {
            addCriterion("Count is null");
            return (Criteria) this;
        }

        public Criteria andCountIsNotNull() {
            addCriterion("Count is not null");
            return (Criteria) this;
        }

        public Criteria andCountEqualTo(Integer value) {
            addCriterion("Count =", value, "count");
            return (Criteria) this;
        }

        public Criteria andCountNotEqualTo(Integer value) {
            addCriterion("Count <>", value, "count");
            return (Criteria) this;
        }

        public Criteria andCountGreaterThan(Integer value) {
            addCriterion("Count >", value, "count");
            return (Criteria) this;
        }

        public Criteria andCountGreaterThanOrEqualTo(Integer value) {
            addCriterion("Count >=", value, "count");
            return (Criteria) this;
        }

        public Criteria andCountLessThan(Integer value) {
            addCriterion("Count <", value, "count");
            return (Criteria) this;
        }

        public Criteria andCountLessThanOrEqualTo(Integer value) {
            addCriterion("Count <=", value, "count");
            return (Criteria) this;
        }

        public Criteria andCountIn(List<Integer> values) {
            addCriterion("Count in", values, "count");
            return (Criteria) this;
        }

        public Criteria andCountNotIn(List<Integer> values) {
            addCriterion("Count not in", values, "count");
            return (Criteria) this;
        }

        public Criteria andCountBetween(Integer value1, Integer value2) {
            addCriterion("Count between", value1, value2, "count");
            return (Criteria) this;
        }

        public Criteria andCountNotBetween(Integer value1, Integer value2) {
            addCriterion("Count not between", value1, value2, "count");
            return (Criteria) this;
        }

        public Criteria andIshavechildIsNull() {
            addCriterion("IsHaveChild is null");
            return (Criteria) this;
        }

        public Criteria andIshavechildIsNotNull() {
            addCriterion("IsHaveChild is not null");
            return (Criteria) this;
        }

        public Criteria andIshavechildEqualTo(String value) {
            addCriterion("IsHaveChild =", value, "ishavechild");
            return (Criteria) this;
        }

        public Criteria andIshavechildNotEqualTo(String value) {
            addCriterion("IsHaveChild <>", value, "ishavechild");
            return (Criteria) this;
        }

        public Criteria andIshavechildGreaterThan(String value) {
            addCriterion("IsHaveChild >", value, "ishavechild");
            return (Criteria) this;
        }

        public Criteria andIshavechildGreaterThanOrEqualTo(String value) {
            addCriterion("IsHaveChild >=", value, "ishavechild");
            return (Criteria) this;
        }

        public Criteria andIshavechildLessThan(String value) {
            addCriterion("IsHaveChild <", value, "ishavechild");
            return (Criteria) this;
        }

        public Criteria andIshavechildLessThanOrEqualTo(String value) {
            addCriterion("IsHaveChild <=", value, "ishavechild");
            return (Criteria) this;
        }

        public Criteria andIshavechildLike(String value) {
            addCriterion("IsHaveChild like", value, "ishavechild");
            return (Criteria) this;
        }

        public Criteria andIshavechildNotLike(String value) {
            addCriterion("IsHaveChild not like", value, "ishavechild");
            return (Criteria) this;
        }

        public Criteria andIshavechildIn(List<String> values) {
            addCriterion("IsHaveChild in", values, "ishavechild");
            return (Criteria) this;
        }

        public Criteria andIshavechildNotIn(List<String> values) {
            addCriterion("IsHaveChild not in", values, "ishavechild");
            return (Criteria) this;
        }

        public Criteria andIshavechildBetween(String value1, String value2) {
            addCriterion("IsHaveChild between", value1, value2, "ishavechild");
            return (Criteria) this;
        }

        public Criteria andIshavechildNotBetween(String value1, String value2) {
            addCriterion("IsHaveChild not between", value1, value2, "ishavechild");
            return (Criteria) this;
        }

        public Criteria andStatusIsNull() {
            addCriterion("status is null");
            return (Criteria) this;
        }

        public Criteria andStatusIsNotNull() {
            addCriterion("status is not null");
            return (Criteria) this;
        }

        public Criteria andStatusEqualTo(Integer value) {
            addCriterion("status =", value, "status");
            return (Criteria) this;
        }

        public Criteria andStatusNotEqualTo(Integer value) {
            addCriterion("status <>", value, "status");
            return (Criteria) this;
        }

        public Criteria andStatusGreaterThan(Integer value) {
            addCriterion("status >", value, "status");
            return (Criteria) this;
        }

        public Criteria andStatusGreaterThanOrEqualTo(Integer value) {
            addCriterion("status >=", value, "status");
            return (Criteria) this;
        }

        public Criteria andStatusLessThan(Integer value) {
            addCriterion("status <", value, "status");
            return (Criteria) this;
        }

        public Criteria andStatusLessThanOrEqualTo(Integer value) {
            addCriterion("status <=", value, "status");
            return (Criteria) this;
        }

        public Criteria andStatusIn(List<Integer> values) {
            addCriterion("status in", values, "status");
            return (Criteria) this;
        }

        public Criteria andStatusNotIn(List<Integer> values) {
            addCriterion("status not in", values, "status");
            return (Criteria) this;
        }

        public Criteria andStatusBetween(Integer value1, Integer value2) {
            addCriterion("status between", value1, value2, "status");
            return (Criteria) this;
        }

        public Criteria andStatusNotBetween(Integer value1, Integer value2) {
            addCriterion("status not between", value1, value2, "status");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table assortment
     *
     * @mbggenerated do_not_delete_during_merge Sat Dec 22 15:26:15 CST 2018
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table assortment
     *
     * @mbggenerated Sat Dec 22 15:26:15 CST 2018
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}